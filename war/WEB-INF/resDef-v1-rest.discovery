{
 "kind": "discovery#restDescription",
 "etag": "\"s1omim4x8ymp9_6H8kBMkfEDqpo/Oqiwy539S764K2XxSFVv7CUq3z4\"",
 "discoveryVersion": "v1",
 "id": "resDef:v1",
 "name": "resDef",
 "version": "v1",
 "description": "This is an API",
 "ownerDomain": "google.com",
 "ownerName": "Google",
 "icons": {
  "x16": "http://www.google.com/images/icons/product/search-16.gif",
  "x32": "http://www.google.com/images/icons/product/search-32.gif"
 },
 "protocol": "rest",
 "baseUrl": "https://4planetmaxime.appspot.com/_ah/api/resDef/v1/",
 "basePath": "/_ah/api/resDef/v1/",
 "rootUrl": "https://4planetmaxime.appspot.com/_ah/api/",
 "servicePath": "resDef/v1/",
 "batchPath": "batch",
 "parameters": {
  "alt": {
   "type": "string",
   "description": "Data format for the response.",
   "default": "json",
   "enum": [
    "json"
   ],
   "enumDescriptions": [
    "Responses with Content-Type of application/json"
   ],
   "location": "query"
  },
  "fields": {
   "type": "string",
   "description": "Selector specifying which fields to include in a partial response.",
   "location": "query"
  },
  "key": {
   "type": "string",
   "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
   "location": "query"
  },
  "oauth_token": {
   "type": "string",
   "description": "OAuth 2.0 token for the current user.",
   "location": "query"
  },
  "prettyPrint": {
   "type": "boolean",
   "description": "Returns response with indentations and line breaks.",
   "default": "true",
   "location": "query"
  },
  "quotaUser": {
   "type": "string",
   "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.",
   "location": "query"
  },
  "userIp": {
   "type": "string",
   "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits.",
   "location": "query"
  }
 },
 "schemas": {
  "ResDef": {
   "id": "ResDef",
   "type": "object",
   "properties": {
    "code": {
     "type": "string"
    },
    "description": {
     "type": "string"
    }
   }
  },
  "ResDefCollection": {
   "id": "ResDefCollection",
   "type": "object",
   "properties": {
    "items": {
     "type": "array",
     "items": {
      "$ref": "ResDef"
     }
    }
   }
  }
 },
 "methods": {
  "find": {
   "id": "resDef.find",
   "path": "find/{id}",
   "httpMethod": "GET",
   "parameters": {
    "id": {
     "type": "string",
     "required": true,
     "location": "path"
    }
   },
   "parameterOrder": [
    "id"
   ],
   "response": {
    "$ref": "ResDef"
   }
  },
  "listResDef": {
   "id": "resDef.listResDef",
   "path": "listResDef",
   "httpMethod": "GET",
   "response": {
    "$ref": "ResDefCollection"
   }
  }
 },
 "resources": {
  "resDef": {
   "methods": {
    "auth": {
     "id": "resDef.resDef.auth",
     "path": "auth",
     "httpMethod": "GET",
     "response": {
      "$ref": "ResDef"
     }
    }
   }
  },
  "resdef": {
   "methods": {
    "add": {
     "id": "resDef.resdef.add",
     "path": "add",
     "httpMethod": "PUT",
     "request": {
      "$ref": "ResDef"
     }
    },
    "bye": {
     "id": "resDef.resdef.bye",
     "path": "foos",
     "httpMethod": "GET"
    },
    "remove": {
     "id": "resDef.resdef.remove",
     "path": "remove/{id}",
     "httpMethod": "DELETE",
     "parameters": {
      "id": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "id"
     ]
    },
    "save": {
     "id": "resDef.resdef.save",
     "path": "save/{nom}",
     "httpMethod": "PUT",
     "parameters": {
      "nom": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "nom"
     ]
    }
   }
  }
 }
}
