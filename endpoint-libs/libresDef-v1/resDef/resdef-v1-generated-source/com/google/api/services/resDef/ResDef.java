/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2013-06-20 19:08:55 UTC)
 * on 2013-06-21 at 15:14:59 UTC 
 * Modify at your own risk.
 */

package com.google.api.services.resDef;

/**
 * Service definition for ResDef (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link ResDefRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class ResDef extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.15.0-rc of the  library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://4planetmaxime.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "resDef/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public ResDef(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  ResDef(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the ResDefOperations collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code ResDef resDef = new ResDef(...);}
   *   {@code ResDef.ResDefOperations.List request = resDef.resDef().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public ResDefOperations resDef() {
    return new ResDefOperations();
  }

  /**
   * The "resDef" collection of methods.
   */
  public class ResDefOperations {

    /**
     * Create a request for the method "resDef.auth".
     *
     * This request holds the parameters needed by the the resDef server.  After setting any optional
     * parameters, call the {@link Auth#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public Auth auth() throws java.io.IOException {
      Auth result = new Auth();
      initialize(result);
      return result;
    }

    public class Auth extends ResDefRequest<com.google.api.services.resDef.model.ResDef> {

      private static final String REST_PATH = "auth";

      /**
       * Create a request for the method "resDef.auth".
       *
       * This request holds the parameters needed by the the resDef server.  After setting any optional
       * parameters, call the {@link Auth#execute()} method to invoke the remote operation. <p> {@link
       * Auth#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected Auth() {
        super(ResDef.this, "GET", REST_PATH, null, com.google.api.services.resDef.model.ResDef.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Auth setAlt(java.lang.String alt) {
        return (Auth) super.setAlt(alt);
      }

      @Override
      public Auth setFields(java.lang.String fields) {
        return (Auth) super.setFields(fields);
      }

      @Override
      public Auth setKey(java.lang.String key) {
        return (Auth) super.setKey(key);
      }

      @Override
      public Auth setOauthToken(java.lang.String oauthToken) {
        return (Auth) super.setOauthToken(oauthToken);
      }

      @Override
      public Auth setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Auth) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Auth setQuotaUser(java.lang.String quotaUser) {
        return (Auth) super.setQuotaUser(quotaUser);
      }

      @Override
      public Auth setUserIp(java.lang.String userIp) {
        return (Auth) super.setUserIp(userIp);
      }

      @Override
      public Auth set(String parameterName, Object value) {
        return (Auth) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Resdef collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code ResDef resDef = new ResDef(...);}
   *   {@code ResDef.Resdef.List request = resDef.resdef().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Resdef resdef() {
    return new Resdef();
  }

  /**
   * The "resdef" collection of methods.
   */
  public class Resdef {

    /**
     * Create a request for the method "resdef.add".
     *
     * This request holds the parameters needed by the the resDef server.  After setting any optional
     * parameters, call the {@link Add#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.google.api.services.resDef.model.ResDef}
     * @return the request
     */
    public Add add(com.google.api.services.resDef.model.ResDef content) throws java.io.IOException {
      Add result = new Add(content);
      initialize(result);
      return result;
    }

    public class Add extends ResDefRequest<Void> {

      private static final String REST_PATH = "add";

      /**
       * Create a request for the method "resdef.add".
       *
       * This request holds the parameters needed by the the resDef server.  After setting any optional
       * parameters, call the {@link Add#execute()} method to invoke the remote operation. <p> {@link
       * Add#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.resDef.model.ResDef}
       * @since 1.13
       */
      protected Add(com.google.api.services.resDef.model.ResDef content) {
        super(ResDef.this, "PUT", REST_PATH, content, Void.class);
      }

      @Override
      public Add setAlt(java.lang.String alt) {
        return (Add) super.setAlt(alt);
      }

      @Override
      public Add setFields(java.lang.String fields) {
        return (Add) super.setFields(fields);
      }

      @Override
      public Add setKey(java.lang.String key) {
        return (Add) super.setKey(key);
      }

      @Override
      public Add setOauthToken(java.lang.String oauthToken) {
        return (Add) super.setOauthToken(oauthToken);
      }

      @Override
      public Add setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Add) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Add setQuotaUser(java.lang.String quotaUser) {
        return (Add) super.setQuotaUser(quotaUser);
      }

      @Override
      public Add setUserIp(java.lang.String userIp) {
        return (Add) super.setUserIp(userIp);
      }

      @Override
      public Add set(String parameterName, Object value) {
        return (Add) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "resdef.bye".
     *
     * This request holds the parameters needed by the the resDef server.  After setting any optional
     * parameters, call the {@link Bye#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public Bye bye() throws java.io.IOException {
      Bye result = new Bye();
      initialize(result);
      return result;
    }

    public class Bye extends ResDefRequest<Void> {

      private static final String REST_PATH = "foos";

      /**
       * Create a request for the method "resdef.bye".
       *
       * This request holds the parameters needed by the the resDef server.  After setting any optional
       * parameters, call the {@link Bye#execute()} method to invoke the remote operation. <p> {@link
       * Bye#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected Bye() {
        super(ResDef.this, "GET", REST_PATH, null, Void.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Bye setAlt(java.lang.String alt) {
        return (Bye) super.setAlt(alt);
      }

      @Override
      public Bye setFields(java.lang.String fields) {
        return (Bye) super.setFields(fields);
      }

      @Override
      public Bye setKey(java.lang.String key) {
        return (Bye) super.setKey(key);
      }

      @Override
      public Bye setOauthToken(java.lang.String oauthToken) {
        return (Bye) super.setOauthToken(oauthToken);
      }

      @Override
      public Bye setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Bye) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Bye setQuotaUser(java.lang.String quotaUser) {
        return (Bye) super.setQuotaUser(quotaUser);
      }

      @Override
      public Bye setUserIp(java.lang.String userIp) {
        return (Bye) super.setUserIp(userIp);
      }

      @Override
      public Bye set(String parameterName, Object value) {
        return (Bye) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "resdef.remove".
     *
     * This request holds the parameters needed by the the resDef server.  After setting any optional
     * parameters, call the {@link Remove#execute()} method to invoke the remote operation.
     *
     * @param id
     * @return the request
     */
    public Remove remove(java.lang.String id) throws java.io.IOException {
      Remove result = new Remove(id);
      initialize(result);
      return result;
    }

    public class Remove extends ResDefRequest<Void> {

      private static final String REST_PATH = "remove/{id}";

      /**
       * Create a request for the method "resdef.remove".
       *
       * This request holds the parameters needed by the the resDef server.  After setting any optional
       * parameters, call the {@link Remove#execute()} method to invoke the remote operation. <p> {@link
       * Remove#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param id
       * @since 1.13
       */
      protected Remove(java.lang.String id) {
        super(ResDef.this, "DELETE", REST_PATH, null, Void.class);
        this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      }

      @Override
      public Remove setAlt(java.lang.String alt) {
        return (Remove) super.setAlt(alt);
      }

      @Override
      public Remove setFields(java.lang.String fields) {
        return (Remove) super.setFields(fields);
      }

      @Override
      public Remove setKey(java.lang.String key) {
        return (Remove) super.setKey(key);
      }

      @Override
      public Remove setOauthToken(java.lang.String oauthToken) {
        return (Remove) super.setOauthToken(oauthToken);
      }

      @Override
      public Remove setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Remove) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Remove setQuotaUser(java.lang.String quotaUser) {
        return (Remove) super.setQuotaUser(quotaUser);
      }

      @Override
      public Remove setUserIp(java.lang.String userIp) {
        return (Remove) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String id;

      /**

       */
      public java.lang.String getId() {
        return id;
      }

      public Remove setId(java.lang.String id) {
        this.id = id;
        return this;
      }

      @Override
      public Remove set(String parameterName, Object value) {
        return (Remove) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "resdef.save".
     *
     * This request holds the parameters needed by the the resDef server.  After setting any optional
     * parameters, call the {@link Save#execute()} method to invoke the remote operation.
     *
     * @param nom
     * @return the request
     */
    public Save save(java.lang.String nom) throws java.io.IOException {
      Save result = new Save(nom);
      initialize(result);
      return result;
    }

    public class Save extends ResDefRequest<Void> {

      private static final String REST_PATH = "save/{nom}";

      /**
       * Create a request for the method "resdef.save".
       *
       * This request holds the parameters needed by the the resDef server.  After setting any optional
       * parameters, call the {@link Save#execute()} method to invoke the remote operation. <p> {@link
       * Save#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param nom
       * @since 1.13
       */
      protected Save(java.lang.String nom) {
        super(ResDef.this, "PUT", REST_PATH, null, Void.class);
        this.nom = com.google.api.client.util.Preconditions.checkNotNull(nom, "Required parameter nom must be specified.");
      }

      @Override
      public Save setAlt(java.lang.String alt) {
        return (Save) super.setAlt(alt);
      }

      @Override
      public Save setFields(java.lang.String fields) {
        return (Save) super.setFields(fields);
      }

      @Override
      public Save setKey(java.lang.String key) {
        return (Save) super.setKey(key);
      }

      @Override
      public Save setOauthToken(java.lang.String oauthToken) {
        return (Save) super.setOauthToken(oauthToken);
      }

      @Override
      public Save setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Save) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Save setQuotaUser(java.lang.String quotaUser) {
        return (Save) super.setQuotaUser(quotaUser);
      }

      @Override
      public Save setUserIp(java.lang.String userIp) {
        return (Save) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String nom;

      /**

       */
      public java.lang.String getNom() {
        return nom;
      }

      public Save setNom(java.lang.String nom) {
        this.nom = nom;
        return this;
      }

      @Override
      public Save set(String parameterName, Object value) {
        return (Save) super.set(parameterName, value);
      }
    }

  }

  /**
   * Create a request for the method "find".
   *
   * This request holds the parameters needed by the the resDef server.  After setting any optional
   * parameters, call the {@link Find#execute()} method to invoke the remote operation.
   *
   * @param id
   * @return the request
   */
  public Find find(java.lang.String id) throws java.io.IOException {
    Find result = new Find(id);
    initialize(result);
    return result;
  }

  public class Find extends ResDefRequest<com.google.api.services.resDef.model.ResDef> {

    private static final String REST_PATH = "find/{id}";

    /**
     * Create a request for the method "find".
     *
     * This request holds the parameters needed by the the resDef server.  After setting any optional
     * parameters, call the {@link Find#execute()} method to invoke the remote operation. <p> {@link
     * Find#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
     * called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected Find(java.lang.String id) {
      super(ResDef.this, "GET", REST_PATH, null, com.google.api.services.resDef.model.ResDef.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public Find setAlt(java.lang.String alt) {
      return (Find) super.setAlt(alt);
    }

    @Override
    public Find setFields(java.lang.String fields) {
      return (Find) super.setFields(fields);
    }

    @Override
    public Find setKey(java.lang.String key) {
      return (Find) super.setKey(key);
    }

    @Override
    public Find setOauthToken(java.lang.String oauthToken) {
      return (Find) super.setOauthToken(oauthToken);
    }

    @Override
    public Find setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Find) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Find setQuotaUser(java.lang.String quotaUser) {
      return (Find) super.setQuotaUser(quotaUser);
    }

    @Override
    public Find setUserIp(java.lang.String userIp) {
      return (Find) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String id;

    /**

     */
    public java.lang.String getId() {
      return id;
    }

    public Find setId(java.lang.String id) {
      this.id = id;
      return this;
    }

    @Override
    public Find set(String parameterName, Object value) {
      return (Find) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listResDef".
   *
   * This request holds the parameters needed by the the resDef server.  After setting any optional
   * parameters, call the {@link ListResDef#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public ListResDef listResDef() throws java.io.IOException {
    ListResDef result = new ListResDef();
    initialize(result);
    return result;
  }

  public class ListResDef extends ResDefRequest<com.google.api.services.resDef.model.ResDefCollection> {

    private static final String REST_PATH = "listResDef";

    /**
     * Create a request for the method "listResDef".
     *
     * This request holds the parameters needed by the the resDef server.  After setting any optional
     * parameters, call the {@link ListResDef#execute()} method to invoke the remote operation. <p>
     * {@link
     * ListResDef#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected ListResDef() {
      super(ResDef.this, "GET", REST_PATH, null, com.google.api.services.resDef.model.ResDefCollection.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListResDef setAlt(java.lang.String alt) {
      return (ListResDef) super.setAlt(alt);
    }

    @Override
    public ListResDef setFields(java.lang.String fields) {
      return (ListResDef) super.setFields(fields);
    }

    @Override
    public ListResDef setKey(java.lang.String key) {
      return (ListResDef) super.setKey(key);
    }

    @Override
    public ListResDef setOauthToken(java.lang.String oauthToken) {
      return (ListResDef) super.setOauthToken(oauthToken);
    }

    @Override
    public ListResDef setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListResDef) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListResDef setQuotaUser(java.lang.String quotaUser) {
      return (ListResDef) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListResDef setUserIp(java.lang.String userIp) {
      return (ListResDef) super.setUserIp(userIp);
    }

    @Override
    public ListResDef set(String parameterName, Object value) {
      return (ListResDef) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link ResDef}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link ResDef}. */
    @Override
    public ResDef build() {
      return new ResDef(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link ResDefRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setResDefRequestInitializer(
        ResDefRequestInitializer resdefRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(resdefRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
